import Taro, { Component, Config } from '@tarojs/taro'
import { View, Text ,ScrollView,Button,Picker,Textarea,Input} from '@tarojs/components'
import { AtAvatar,
         AtNoticebar,
         AtButton,
         AtTabs, 
         AtTabsPane,
         AtModal, 
         AtModalHeader,
         AtModalContent, 
         AtModalAction,
         AtInput, 
        //  AtForm, 
        //  AtSwitch,
         AtSlider,
         AtIcon ,
         AtProgress,
         AtTextarea,
        } from 'taro-ui'
        import $ from 'jquery'

let loopload 

let scrollty
let scrolltxx
let scrolltxy

let scrollid = ''

let rangevalue = 50

import  './index.scss'

import url from '../../utils/url'

export default class Index extends Component {

  /**
   * 指定config的类型声明为: Taro.Config
   *
   * 由于 typescript 对于 object 类型推导只能推出 Key 的基本类型
   * 对于像 navigationBarTextStyle: 'black' 这样的推导出的类型是 string
   * 提示和声明 navigationBarTextStyle: 'black' | 'white' 类型冲突, 需要显示声明类型
   */
  config: Config = {
    navigationBarTitleText: '工作日志'
  }

  state={
    userinfo:{type: 'userAvatarUrl'},
    currenttime:'',
    register:{msg:'error',state:false},
    username:'',
    phone:'',
    current: 2,
    currentdate:0,
    current_today:'',
    onedayago:'',
    twodayago:'',
    today_data:[], 
    onedayago_data:[],
    twodayago_data:[],
    itemtitles:['时长(分)','工作项目','工作内容及说明','效率指数','效果指数','驱动指数'],
    moment:['9:00','9:30','10:00','10:30','11:00','11:30','12:00','12:30','13:00','13:30','14:00','14:30','15:00','15:30','16:00','16:00','16:30','17:00','17:30','18:00','18:30','19:00','19:30','20:00','20:30','21:00'],
    showmodel:false,
    modeldatatitle:'标题',
    value:'',
    idMname:{
      work_start_time:'开始时间',
      length_time:'时长(分)',
      work_project:'工作项目',
      work_content:'工作内容及说明',
      work_efficiency:'效率自评',
      work_effect:'效果自评',
      work_myself:'驱动自评',
    },
    targhtid:[],
    showmessageboolean:false,
    showmaeeagecontext:'',
    systemheight:'',
    resttime:'08:00,08:30,12:00,12:30,13:00,13:30,18:00,18:30,19:00,19:30,20:00,20:30,21:00',
    lockstate:false,
    functioncControlict:{

    },
    scrolltitlex:0,
    scrolltitley:0,
    showrankmodel:false,
    contextscrolltitlex:0,
    contextscrolltitley:0,
    ischangetime:false,
    maintask:[],
    showloginmodel:false,
    isinput:false,
    rangevalue:50,
    timelong:{min:10,max:120,step:5},
    ranklong:{min:1,max:10,step:0.5}
    
    
    
    // {
    //   id: "2",
    //   username: "朱海涛",
    //   openid: "o-GjW5XADtUav0uDKr319xbTe9mk",
    //   title: "任务1",
    //   content: "内容1",
    //   date: "2018-12",
    //   length_time: "100",
    //   create_time: "2018-12-20 09:54:40",
    //   complete_time:'100'
    // }


    // {id: "1",
    // date: "2018-12-14",
    // work_start_time: "9:00",
    // length_time: "0",
    // work_project: "",
    // work_content: "",
    // work_efficiency: "0.0",
    // work_effect: "0.0",
    // work_myself: "0.0"}
  }


  componentWillMount () {
    console.log('载入init')
   
    
   }

  componentDidMount () {
    
    //载入锁定状态
    this.setState({
      lockstate :Taro.getStorageSync('lockstate')
    })
  }

  componentWillUnmount () { }

  componentDidShow () {
    console.log('载入show')

    this.setState({
      username:Taro.getStorageSync('username'),
      phone:Taro.getStorageSync('phone'),
      register:Taro.getStorageSync('register')
    })

    if(Taro.getStorageSync('phone')==='')
    {
      this.setState({
        showloginmodel:true
      })
      
    }else{
      this.pullmaintask()
      this.pulldata()
    }
    //保持所有div的高度
    setTimeout(()=>{
      this.flushhight()
    },500)
  }
    
   

  componentDidHide () { }

  flushhight(){
      let current = this.state.current
      console.log('current'+current);

      //选择每一行
      let $table =  $('#hhhtab'+(parseInt(current+'')+1)+' > div')
      console.log($table );
      
      for(let i = 0;i<$table.length;i++){
         let id_temp =  $($table[i]).attr('id')
         let divheight = 50 
         let divheight_content = $('#work_content\\@\\@'+id_temp).height()
         let divheight_project = $('#work_project\\@\\@'+id_temp).height()
         console.log('项目高度:'+divheight_content);
         console.log('内容:'+divheight_project);
        //  divheight = divheight_content>=divheight_project?divheight_content:divheight_project
         divheight = Math.max(divheight_content,divheight_project)
         console.log('最终:'+divheight);
         $('#length_time\\@\\@'+id_temp).height(divheight)
         $('#work_project\\@\\@'+id_temp).height(divheight)
         $('#work_start_time\\@\\@'+id_temp).height(divheight)
         $('#work_efficiency\\@\\@'+id_temp).height(divheight)
         $('#work_effect\\@\\@'+id_temp).height(divheight)
         $('#work_myself\\@\\@'+id_temp).height(divheight)
        //  $('#work_content\\@\\@'+id_temp).height(divheight)

      }

      console.log('高度已经刷新了'); 
      
  }

  pullmaintask(){
     
    //载入主线任务
    Taro.request({
      url:url.locality_address+'/v1/work/task',
      data:{
        phone:Taro.getStorageSync('phone'),
        scene:'web'
      }
    }).then((res)=>{
        if(res.data.code==200){
            this.setState({
              maintask:res.data.result
            })
        }else{
          Taro.showToast({
            title:"主线任务加载失败，检查参数！",
            icon:'none'
          })
        }
    }).catch((res)=>{
        Taro.showToast({
          title:"主线任务加载失败，检查网络！",
          icon:'none'
        })
    })

  }

  pulldata(){
  
    let time
    Taro.request({
      url:url.locality_address+'/v1/work/time'
    }).then(
       (res) => {
         let now = new Date(parseInt(res.data.success_msg.time)*1000)
        //  time = this.timedat(now)
        //  time = time + ' ' + this.getWeek(now)
         time =  this.getWeek(now)
         this.setState({
          currenttime:time,
          currentdate:(parseInt(res.data.success_msg.time)*1000)
         })
         return (parseInt(res.data.success_msg.time)*1000)
        }

    ).then( 
      (timest)=>{
        this.setState({
          current_today:this.timedaty_m_d(timest),
          onedayago:this.timedaty_m_d((timest-86400000)),
          twodayago:this.timedaty_m_d((timest-86400000*2))
         })
         
         return [this.timedaty_m_d(timest),this.timedaty_m_d((timest-86400000)),this.timedaty_m_d((timest-86400000*2))]
      }
    ).then((timearray)=>{
      //拉取数据
      Taro.request({
        url:url.locality_address+'/v1/work/notes',
        data:{
          phone:Taro.getStorageSync('phone'),
          scene:'web',
          date:timearray[0]
        }
      }).then((res)=>{
        console.log(res.data.success_msg.info);
         this.setState({
          today_data:res.data.success_msg.info
         })
  
       
         
      })
      return timearray
    }).then((timearray)=>{
      //拉取数据
      Taro.request({
        url:url.locality_address+'/v1/work/notes',
        data:{
          phone:Taro.getStorageSync('phone'),
          scene:'web',
          date:timearray[1]
        }
      }).then((res)=>{
         this.setState({
          onedayago_data:res.data.success_msg.info
         })
      })
      return timearray
    }).then((timearray)=>{
      //拉取数据
      Taro.request({
        url:url.locality_address+'/v1/work/notes',
        data:{
          phone:Taro.getStorageSync('phone'),
          scene:'web',
          date:timearray[2]
        }
      }).then((res)=>{
         this.setState({
          twodayago_data:res.data.success_msg.info
         })
         console.log(res.data.success_msg.info)
      })
      return timearray
    })

  }

  render () {
    
    const tabList = [{ title:this.state.twodayago }, { title: this.state.onedayago}, { title:this.state.current_today}]
    let {itemtitles} = this.state
    let today_data = this.state.today_data
    let onedayago_data = this.state.onedayago_data
    let twodayago_data = this.state.twodayago_data


    
    //标题
    let itemtitle = itemtitles.map((item)=>{
      return <View className='itemtitle' style=' border-bottom: 1px solid  black;'>{item}</View>
    })

    
    //时间栏
    let timelist = twodayago_data.map(
      (item) =>{
   

        return <View id={'work_start_time@@'+item.id} style={this.state.resttime.indexOf(item.work_start_time)>-1&&item.work_start_time.length>=5?'color:green':'none'} className='itemcontext1'>{item.work_start_time}</View>
      }
    )
    //onClick={this.showmessage}
    //内容
    let itemcontexttoday =  today_data.map((item)=>{
     return <View className='tabletitle' id={item.id}>
        <View id={'work_start_time@@'+item.id} style={this.state.resttime.indexOf(item.work_start_time)>-1&&item.work_start_time.length>=5?'color:green':'none'} className='itemcontext1'>{item.work_start_time}</View>
        <View id={'length_time@@'+item.id} onClick={this.showrankmodel.bind(this)}  className='itemcontext'><Text>{item.length_time}</Text></View>
        <View id={'work_project@@'+item.id} onClick={this.changemessage.bind(this)}  className='itemcontext_long'><Text>{item.work_project}</Text></View>
        <View id={'work_content@@'+item.id} onClick={this.changemessage.bind(this)}  className='itemcontext_long'>{item.work_content}</View>
        <View id={'work_efficiency@@'+item.id} onClick={this.showrankmodel.bind(this)}  className='itemcontext'><Text>{item.work_efficiency}</Text></View>
        <View id={'work_effect@@'+item.id} onClick={this.showrankmodel.bind(this)}  className='itemcontext'><Text>{item.work_effect}</Text></View>
        <View id={'work_myself@@'+item.id} onClick={this.showrankmodel.bind(this)} className='itemcontext'><Text>{item.work_myself}</Text></View>
     
      </View>
    })

    let itemcontextoneago = onedayago_data.map((item)=>{
      return <View className='tabletitle' id={item.id}>
        <View id={'work_start_time@@'+item.id} style={this.state.resttime.indexOf(item.work_start_time)>-1&&item.work_start_time.length>=5?'color:green':'none'} className='itemcontext1'>{item.work_start_time}</View>
         <View id={'length_time@@'+item.id}  onClick={this.showrankmodel.bind(this)}  className='itemcontext'>{item.length_time}</View>
         <View id={'work_project@@'+item.id} onClick={this.changemessage.bind(this)}  className='itemcontext_long'>{item.work_project}</View>
         <View id={'work_content@@'+item.id} onClick={this.changemessage.bind(this)}  className='itemcontext_long'>{item.work_content}</View>
         <View id={'work_efficiency@@'+item.id} onClick={this.showrankmodel.bind(this)}  className='itemcontext'>{item.work_efficiency}</View>
         <View id={'work_effect@@'+item.id} onClick={this.showrankmodel.bind(this)} className='itemcontext'>{item.work_effect}</View>
         <View id={'work_myself@@'+item.id} onClick={this.showrankmodel.bind(this)}  className='itemcontext'>
         {item.work_myself}
         </View>
       </View>
     })

    let itemcontexttwoago = twodayago_data.map((item)=>{
      return <View className='tabletitle' id={item.id}>
        <View id={'work_start_time@@'+item.id} style={this.state.resttime.indexOf(item.work_start_time)>-1&&item.work_start_time.length>=5?'color:green':'none'} className='itemcontext1'>{item.work_start_time}</View>
         <View id={'length_time@@'+item.id} onClick={this.showrankmodel.bind(this)} className='itemcontext'>{item.length_time}</View>
         <View id={'work_project@@'+item.id} onClick={this.changemessage.bind(this)}  className='itemcontext_long'>{item.work_project}</View>
         <View id={'work_content@@'+item.id} onClick={this.changemessage.bind(this)}  className='itemcontext_long'>{item.work_content}</View>
         <View id={'work_efficiency@@'+item.id} onClick={this.showrankmodel.bind(this)}  className='itemcontext'>{item.work_efficiency}</View>
         <View id={'work_effect@@'+item.id} onClick={this.showrankmodel.bind(this)}  className='itemcontext'>{item.work_effect}</View>
         <View id={'work_myself@@'+item.id} onClick={this.showrankmodel.bind(this)}  className='itemcontext'>
         {item.work_myself}
         </View>
       </View>
     })



let title2 = <View className='itemtitleplus' id='ScrollView222'   >
    {/* <View className='itemtitle'>开始时间</View> */}

  {/* 上半部分 */}
      <View
      className='scrollview1'
      >
        <View className='itemtitle1'>时间</View>
      </View>


    <View id='ScrollView222' >
            <View className='tabletitle'>
              {/* {itemtitle} */}
              <View className='itemtitle' style=' border-bottom: 1px solid  black;'>{'时长(分)'}</View>
              <View className='itemtitle_long' style=' border-bottom: 1px solid  black;'>{'工作项目'}</View>
              <View className='itemtitle_long' style=' border-bottom: 1px solid  black;'>{'工作内容及说明'}</View>
              <View className='itemtitle' style=' border-bottom: 1px solid  black;'>{'效率指数'}</View>
              <View className='itemtitle' style=' border-bottom: 1px solid  black;'>{'效果指数'}</View>
              <View className='itemtitle' style=' border-bottom: 1px solid  black;'>{'驱动指数'}</View>
            </View>
    </View>
</View>


    // 下半部分
let context = <View className='logcontext'>
 
                  <View className='table' id='hhhtab3'>
                        {itemcontexttoday}
                  </View>
 
              </View>


            let context1 = <View className='logcontext' >


                  <View className='table' id='hhhtab2'>
                        {itemcontextoneago}
                  </View>
            </View>



              let context2 = <View className='logcontext' >



              {/* 任务内容列表 */}

              <View className='table' id='hhhtab1'>
                    {itemcontexttwoago}
              </View>


              </View>


      let tasklist = this.state.maintask.map((item)=>{
        return <View className='maintaskitem'>
            <Text className='tasktitle'>{item.title}</Text>
            <View style='flex:1'> 
            <AtProgress percent={parseInt(item.complete_time)} status={parseInt(item.complete_time)==100?'success':'progress'} />
            </View>
        </View>
      })



    
  
  
    return (
      <View className='index'>
   
          {this.state.register.state && <AtNoticebar marquee>
           欢迎使用好玩工作日志系统
          </AtNoticebar>
          <View className="title">
              <View className='userinfo'>
                {/* <AtAvatar className='touxiang' openData={this.state.userinfo} circle={true} size="small"></AtAvatar> */} 
                <Text className="username">{this.state.register.state?this.state.username:'欢迎'}</Text>
              </View>
            
              <Text className='currenttime'>{this.state.currenttime}</Text>

                
                <View className='task' onClick={this.tomaintask}>
                    <Text style='font-size:10px;'>主线任务</Text>
                    <AtIcon value='clock' size='20' color='#888' ></AtIcon>
                </View>
              
          </View>
           }


         {this.state.register.state &&

            <View
            className='maintaskscroll'
            id='ScrollViewtask' 
            >
            
            {this.state.maintask.length<=0 && 
            <View className='maintaskempty'>
              <Text>暂无任务</Text>
            </View>
            }
            {this.state.maintask.length>0 && 
            <View className='maintask'>
              {tasklist}
              </View>
            }
        
          </View>
           }
        
    

       {this.state.register.state && <AtTabs current={this.state.current}  tabList={tabList} onClick={this.handleClick.bind(this)} swipeable={false}>
        <AtTabsPane current={this.state.current} index={0} >
        <View className='test1'>
          {title2}
          {context2}
          </View>
        </AtTabsPane>
        <AtTabsPane current={this.state.current} index={1}>
        <View className='test1'>
          {title2}
          {context1}
          </View>
        </AtTabsPane>
        <AtTabsPane current={this.state.current} index={2}>
          <View className='test1'>
          {title2}
          {context}
          </View>

        </AtTabsPane>

        </AtTabs>
          }
    

          <AtModal isOpened={this.state.showmodel} closeOnClickOverlay={false} onClose={this.closeModal.bind(this, 1, 'Modal被关闭了')}>
          <AtModalHeader>{this.state.modeldatatitle}</AtModalHeader>
          <AtModalContent>
          {/* {(this.state.showmodel && this.state.isinput) &&
          <AtInput
              name='value1'
              type='text'
              placeholder='输入内容'
              value={this.state.value}
              onChange={this.handleChangeinput.bind(this)}
              customStyle='border:1px solid #d6e4ef;padding:15rpx 0;border-radius:8rpx;              '
            />
            } */}
            {(this.state.showmodel) &&
             <AtTextarea
                value={this.state.value}
                onChange={this.handleChange.bind(this)}
                maxlength='400'
                placeholder='内容'
                className='addcontextarea'
              />
            }

          </AtModalContent>
          <AtModalAction>
            <Button onClick={this.closeModal.bind(this, 1, '点击了取消')}>
              取消
            </Button>
            <Button
              style='color:#6190E8'
              onClick={this.updatemessage.bind(this, 1, '点击了确定')}
            >
              确定
            </Button>
          </AtModalAction>
        </AtModal>


        
         
         {/* 评分&&时间 */}
        <AtModal isOpened={this.state.showrankmodel} closeOnClickOverlay={false} onClose={this.closeModal.bind(this, 1, 'Modal被关闭了')}>
          <AtModalHeader>{this.state.modeldatatitle}</AtModalHeader>
          <AtModalContent>

               <View className='rangeview'>
                    <Input
                    name='value1'
                    type='range'
                    value={this.state.value}
                    onChange={this.changerange.bind(this)}
                    max={120}
                    min={10}
                    step={5}
                    id='range1'
                    >
                    </Input> 
                    <Text>{this.state.value}</Text>
                </View>

          </AtModalContent>
          <AtModalAction>
            <Button 
              onClick={this.closeModal.bind(this, 1, '点击了取消')}
            >
              取消
            </Button>
            <Button
              style='color:#6190E8'
              onClick={this.updatemessage.bind(this, 1, '点击了确定')}
            >
              确定
            </Button>
          </AtModalAction>
        </AtModal>

        {/* 登录注册 */}


        <AtModal isOpened={this.state.showloginmodel} closeOnClickOverlay={false} onClose={this.closeloginModal.bind(this, 1, '点击了确定')}>
          <AtModalHeader>登录</AtModalHeader>
          <AtModalContent>
            <View className='delmode'>
                        <View className="formstyle">
                            <AtInput
                              name='value'
                              type='text'
                              placeholder='请输入姓名'
                              value={this.state.username}
                              onChange={this.nameChange.bind(this)}
                              customStyle='padding:15rpx 0'
                            />
                        <View className="formstyle">
                            <AtInput
                              name='value'
                              type='text'
                              placeholder='请输入手机号码'
                              value={this.state.phone}
                              onChange={this.changePhone.bind(this)}
                              customStyle='padding:15rpx 0'
                            />
                        </View>
                        
                        </View>
            </View>
          </AtModalContent>
          <AtModalAction>

            <Button
              style='color:#6190E8'
              onClick={this.login.bind(this, 1, '点击了登录')}
            >
              确定
            </Button>
          </AtModalAction>
        </AtModal>

      </View>
    )
  }

  changerange(e){
 
    rangevalue = e.detail.value
    this.setState({
      value:rangevalue
    })
 
  }

  login(){
    const phoneverfy =  /(?:^1[3456789]|^9[28])\d{9}$/

    if(this.state.username.length>7||this.state.username.length<=0){
      Taro.showToast({
        title:'名字太长',
        icon:'none'
      })

    }else{
      if(!phoneverfy.test(this.state.phone)){
            Taro.showToast({
              title:'手机号格式不正确',
              icon:'none'
            })
            return
          
      }

      Taro.request({
        url:url.locality_address+'/v1/work/phone-login',
        data:{
          username:this.state.username,
          phone:this.state.phone,
          scene:'web'
        },
        method:'POST',
        header:{  "Content-Type": "application/x-www-form-urlencoded"}
       }).then((res)=>{
         if(res.data.code==200){
          Taro.setStorageSync('username',this.state.username)
          Taro.setStorageSync('phone',this.state.phone)
          Taro.setStorageSync('register',{msg:'success',state:true})
          this.setState({
            register:{msg:'success',state:true}
          })
          Taro.showLoading({
            title:'请稍后',
            mask:true,
          })
          setTimeout(() => {
            Taro.hideLoading()
            this.setState({
              showloginmodel:false
            })
            this.pullmaintask()
            this.pulldata()
          }, 1000); 
 
        }else{
          Taro.showToast({
            title:'网络出错！',
            icon:'none'
          })
        }
        }).catch((res)=>{
          Taro.showToast({
            title:'网络出错！',
            icon:'none'
          })
        })

    }

  }


  closeloginModal(){

  }

  nameChange(value){
    this.setState({
      username:value
    })
  }


  changePhone (value) {
    this.setState({
      phone:value
    })
  }

  tomaintask(e){
    Taro.navigateTo({
      url:'/pages/maintask/maintask'
    })
  }



  showmessage(e){

    console.log('断案')

    let  tapid =  e.currentTarget.id
    let tab111 = tapid.split('@@')
    console.log(tab111)

    this.setState({
      targhtid:tab111,
      modeldatatitle:this.state.idMname[tab111[0]]
    })

    let text = ''

    switch(this.state.current){
      case 0:
      console.log('进入10')
      let twodayago_data = this.state.twodayago_data
      for(let i = 0;i< twodayago_data.length;i++){
        if(twodayago_data[i].id==tab111[1]){
          text = twodayago_data[i][tab111[0]]
        }
      }
      break;
      case 1:
      console.log('进入2')
      let onedayago_data = this.state.onedayago_data
      for(let i = 0;i< onedayago_data.length;i++){
        if(onedayago_data[i].id==tab111[1]){
          text = onedayago_data[i][tab111[0]]
        }
      }
      break;
      case 2:
      console.log('进入3')
      let today_data_temp = this.state.today_data
        for(let i = 0;i< today_data_temp.length;i++){
          if(today_data_temp[i].id==tab111[1]){
            text = today_data_temp[i][tab111[0]]
          }
        }
       
      break;
  }


    this.setState({
      showmessageboolean:true,
      showmaeeagecontext:text
    })
  }


  changelockstate(){

      this.setState({
        lockstate:!this.state.lockstate
      })

      Taro.setStorageSync('lockstate',!this.state.lockstate)

  }


//修改时间
  onDateChange = e => {
    this.setState({
      dateSel: e.detail.value
    })

    console.log(e)
          Taro.request({
            url:url.locality_address+'/v1/work/modify',
            data:{
              wid:e.currentTarget.id,
              openid:'o-GjW5XADtUav0uDKr319xbTe9mk',
              field:'length_time',
              val:e.detail.value
            },
            method:'POST',
            header:{  "Content-Type": "application/x-www-form-urlencoded"}
        }).then((res)=>{
            //更改现有数据
            switch(this.state.current){
                case 0:
                let twodayago_data = this.state.twodayago_data
                for(let i = 0;i< twodayago_data.length;i++){
                  if(twodayago_data[i].id==res.data.result.wid){
                    twodayago_data[i][res.data.result.field] = res.data.result.val;
                  }
                }
                break;
                case 1:
                let onedayago_data = this.state.onedayago_data
                for(let i = 0;i< onedayago_data.length;i++){
                  if(onedayago_data[i].id==res.data.result.wid){
                    onedayago_data[i][res.data.result.field] = res.data.result.val;
                  }
                }
                break;
                case 2:
                let today_data_temp = this.state.today_data
                  for(let i = 0;i< today_data_temp.length;i++){
                    if(today_data_temp[i].id==res.data.result.wid){
                      today_data_temp[i][res.data.result.field] = res.data.result.val;
                    }
                  }
                break;
            }

            this.setState({
            showmodel:false,
            targhtid:[],
            modeldatatitle:'标题',
            value:''
            })
        }) 

  }


  closepicker(){

  }

  closeshowModal(){
    this.setState({
      showmessageboolean:false,
      showmaeeagecontext:'',
      targhtid:[],
      modeldatatitle:'标题',
    })
  }

  //替换内容
  handleClick (value) {

    console.log(value)
    this.setState({
      current: value,
      scrolltitlex:0,
      scrolltitley:0,
      contextscrolltitley:0,
      contextscrolltitlex:0
    })
    
      clearTimeout(
       scrollty
       )

      clearTimeout(
        scrolltxx
       )

       clearTimeout(
        scrolltxy
       )

      setTimeout(() => {
        this.flushhight()
      }, 500);
      
  }
  
  handleChangeinput (value) {
    console.log(value)
    this.setState({
      value:value
    })
  }

  handleChange (e) {
    console.log(e)

    this.setState({
      value:e.nativeEvent.target.value
    })
  }
  
  changemessage(e){

    console.log(e)
    console.log('长按')
    

    let  tapid =  e.currentTarget.id
    let tab111 = tapid.split('@@')
    this.setState({
      showmodel:true,
      targhtid:tab111,
      modeldatatitle:this.state.idMname[tab111[0]],
    })

    
    let text = ''

    switch(this.state.current){
      case 0:
      console.log('进入10')
      let twodayago_data = this.state.twodayago_data
      for(let i = 0;i< twodayago_data.length;i++){
        if(twodayago_data[i].id==tab111[1]){
          text = twodayago_data[i][tab111[0]]
        }
      }
      break;
      case 1:
      console.log('进入2')
      let onedayago_data = this.state.onedayago_data
      for(let i = 0;i< onedayago_data.length;i++){
        if(onedayago_data[i].id==tab111[1]){
          text = onedayago_data[i][tab111[0]]
        }
      }
      break;
      case 2:
      console.log('进入3')
      let today_data_temp = this.state.today_data
        for(let i = 0;i< today_data_temp.length;i++){
          if(today_data_temp[i].id==tab111[1]){
            text = today_data_temp[i][tab111[0]]
          }
        }
       
      break;
  }

  this.setState({
    value:text
  })


  }
  //提交变动
  updatemessage(e){
    console.log(e);
    
   Taro.request({
      url:url.locality_address+'/v1/work/modify',
      data:{  
        wid:this.state.targhtid[1],
        openid:'o-GjW5XADtUav0uDKr319xbTe9mk',
        field:this.state.targhtid[0],
        val:this.state.value
      },
      method:'POST',
      header:{  "Content-Type": "application/x-www-form-urlencoded"}
   }).then((res)=>{
      //更改现有数据
      switch(this.state.current){
          case 0:
          let twodayago_data = this.state.twodayago_data
          for(let i = 0;i< twodayago_data.length;i++){
            if(twodayago_data[i].id==this.state.targhtid[1]){
              console.log('1111'+twodayago_data[i][this.state.targhtid[0]])
              twodayago_data[i][this.state.targhtid[0]] = this.state.value;
            }
          }
          break;
          case 1:
          let onedayago_data = this.state.onedayago_data
          for(let i = 0;i< onedayago_data.length;i++){
            if(onedayago_data[i].id==this.state.targhtid[1]){
              console.log('1111'+onedayago_data[i][this.state.targhtid[0]])
              onedayago_data[i][this.state.targhtid[0]] = this.state.value;
            }
          }
          break;
          case 2:
          let today_data_temp = this.state.today_data
            for(let i = 0;i< today_data_temp.length;i++){
              if(today_data_temp[i].id==this.state.targhtid[1]){
                console.log('1111'+today_data_temp[i][this.state.targhtid[0]])
                today_data_temp[i][this.state.targhtid[0]] = this.state.value;
              }
            }
           
          break;
      }

      this.setState({
      showmodel:false,
      targhtid:[],
      modeldatatitle:'标题',
      value:'',
      showrankmodel:false
      })
      setTimeout(() => {
        this.flushhight()
      }, 500); 
     
   }) 
  }

  changerank(e){
    this.setState({
      value:e.value
    })
  }
  
  //关闭模态框
  closeModal = (type, msg) => {
    console.log(msg)
    this.setState({
      showmodel:false,
      targhtid:[],
      modeldatatitle:'标题',
      value:'',
      showrankmodel:false,
      ischangetime:false
    })
  }

  showrankmodel(e){

    console.log(e)
    console.log(e.currentTarget.dataset.text)
    console.log('长按')
    console.log(this.state)
    if(!this.state.lockstate){

    let  tapid =  e.currentTarget.id
    let tab111 = tapid.split('@@')

    let text = ''


    //定义滑动条范围
    if(tab111[0]=='work_efficiency'||tab111[0]=='work_effect'||tab111[0]=='work_myself')
    {
      $('#range1').attr(this.state.ranklong)
    }else if(tab111[0]=='length_time'){
      $('#range1').attr(this.state.timelong)
    }

    switch(this.state.current){
      case 0:
      console.log('进入10')
      let twodayago_data = this.state.twodayago_data
      for(let i = 0;i< twodayago_data.length;i++){
        if(twodayago_data[i].id==tab111[1]){
          text = twodayago_data[i][tab111[0]]
        }
      }
      break;
      case 1:
      console.log('进入2')
      let onedayago_data = this.state.onedayago_data
      for(let i = 0;i< onedayago_data.length;i++){
        if(onedayago_data[i].id==tab111[1]){
          text = onedayago_data[i][tab111[0]]
        }
      }
      break;
      case 2:
      console.log('进入3')
      let today_data_temp = this.state.today_data
        for(let i = 0;i< today_data_temp.length;i++){
          if(today_data_temp[i].id==tab111[1]){
            text = today_data_temp[i][tab111[0]]
          }
        }
       
      break;
  }
    console.log(typeof text)

    if(tab111[0]=='length_time'){
      this.setState({
        ischangetime: true,
        value:text===''||!text?'10':text,
      })
     
    }else{
      this.setState({
        value:text===''||!text?'1':text,
      })
    }

  
    this.setState({
      showrankmodel:true,
      targhtid:tab111,
      modeldatatitle:this.state.idMname[tab111[0]],
    
    })
  }else{
    return
  }

  }

   getWeek(date) {
    let week; 
    if(date.getDay() == 0) week = "星期日" 
    if(date.getDay() == 1) week = "星期一" 
    if(date.getDay() == 2) week = "星期二" 
    if(date.getDay() == 3) week = "星期三" 
    if(date.getDay() == 4) week = "星期四" 
    if(date.getDay() == 5) week = "星期五" 
    if(date.getDay() == 6) week = "星期六" 
    return week; 
                }

 timedat(res){   //res 为传入的时间戳   例：1509091800000

    var time = new Date(res);

    var y = time.getFullYear();

   var m = time.getMonth()+1;

   var d = time.getDate();
 

   return m+'月'+d+'日';    //返回格式  "2017-10-27" 字符串
}

timedaty_m_d(res){   //res 为传入的时间戳   例：1509091800000

  let time1 = new Date(res);

  var y = time1.getFullYear();

 var m = time1.getMonth()+1;
 if(m<10){
   m='0'+m
 }

 var d = time1.getDate();

 if(d<10){
  d='0'+d
}


 return y+'-'+m+'-'+d;    //返回格式  "2017-10-27" 字符串
}

goregister(){
  Taro.navigateTo({
    url:'/pages/bindname/bindname'
  })
}



}

